package com.app.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dao.AddressDao;
import com.app.dto.AddressDTO;
import com.app.service.AddressService;

@RestController
@CrossOrigin
@Validated
@RequestMapping("/address")
public class AddressController {

	@Autowired
	private AddressService addressService;

	// add address for customer
	@PostMapping("/customer/{customerId}")
	public ResponseEntity<?> addCustomerAddress(@PathVariable Long customerId,
			@RequestBody @Valid AddressDTO addressDetails) {
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(addressService.addCustomerAddress(customerId, addressDetails));
	}

	// add address for vendor
	@PostMapping("/vendor/{vendorId}")
	public ResponseEntity<?> addVendorAddress(@PathVariable Long vendorId,
			@RequestBody @Valid AddressDTO addressDetails) {
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(addressService.addVendorAddress(vendorId, addressDetails));
	}

	// get customer address
	@GetMapping("/get/customer/{customerId}")
	public ResponseEntity<?> getCustomerAddress(@PathVariable Long customerId) {
		return ResponseEntity.status(HttpStatus.OK).body(addressService.getCustomerAddress(customerId));
	}

	// get vendor address
	@GetMapping("/get/vendor/{vendorId}")
	public ResponseEntity<?> getVendorAddress(@PathVariable Long vendorId) {
		return ResponseEntity.status(HttpStatus.OK).body(addressService.getVendorAddress(vendorId));
	}

	// get vendor address by name
	@GetMapping("/get/vendor/{vendorName}")
	public ResponseEntity<?> getVendorAddressByName(@PathVariable Long vendorId) {
		return ResponseEntity.status(HttpStatus.OK).body(addressService.getVendorAddress(vendorId));
	}

}
