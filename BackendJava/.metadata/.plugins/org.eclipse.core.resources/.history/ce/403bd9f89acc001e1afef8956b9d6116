package com.app.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.DishDTO;
import com.app.service.DishService;

@RestController
@RequestMapping("/dishes")
@Validated
@CrossOrigin(origins = "http://localhost:3000")
public class DishController {

	@Autowired
	private DishService dishService;

	public DishController() {
		System.out.println("In ctor of " + getClass());
	}

	// find all dishes for displaying all the dishes on dashboard
	// URL :- http://localhost:8080/dishes/
	// Method:- GET
	// Response:- List<DishDTO>,SC200
	@GetMapping
	public ResponseEntity<?> getAllDishes() {
		return ResponseEntity.status(HttpStatus.OK).body(dishService.getAllDishes());
	}

	// find specific dish by name for searching the dish
	// URL :- http://localhost:8080/dishes/
	// Method:- GET
	// Response:- List<DishDTO>,SC200
	@GetMapping("/{dishName}")
	public ResponseEntity<?> getAllDishesByName(@PathVariable String dishName) {
		return ResponseEntity.status(HttpStatus.OK).body(dishService.getAllDishesByName(dishName));
	}

	// Add dish details by vendor
	// URL :- http://localhost:8080/dishes/
	// Method:- POST
	// Response:- msg,SC201
	@PostMapping("/{vendorId}")
	public ResponseEntity<?> addDishDetails(@PathVariable Long vendorId, @RequestBody @Valid DishDTO dish) {
		return ResponseEntity.status(HttpStatus.CREATED).body(dishService.addDishDetails(vendorId, dish));
	}

	// remove dish details by vendor
	// URL :- http://localhost:8080/dishes/
	// Method:- DELETE
	// Response:- msg,SC200
	@DeleteMapping("/{vendorName}/{dishId}")
	public ResponseEntity<?> deleteDishDetails(@PathVariable Long dishId,@PathVariable String vendorName){
		return ResponseEntity.status(HttpStatus.OK)
				.body(dishService.deleteDishDetails(dishId,vendorName));
	}

//	//get dishById
//	@GetMapping("/get/{dishId}")
//	public ResponseEntity<?> getDDishByid(@PathVariable Long dishId){
//		return ResponseEntity.status(HttpStatus.OK)
//				.body(dishService.getDishById(dishId));
//	}
	
	@GetMapping("/get/{vendorId}")
	public ResponseEntity<?> getDishbyVendorId(@PathVariable Long vendorId){
		return ResponseEntity.status(HttpStatus.OK)
				.body(dishService.getDishByVendorId(vendorId));
	}
 }
