package com.app.service;

import javax.validation.Valid;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.app.dao.CustomerDao;
import com.app.dao.VendorDao;
import com.app.dto.CustomerSignUpDTO;
import com.app.entities.Customers;
import com.app.entities.Status;
import com.app.entities.UserRole;
import com.app.entities.Vendors;

@Service
@Transactional
public class UserServiceImpl implements UserService {

	@Autowired
	private CustomerDao customerDao;

	@Autowired
	private VendorDao vendorDao;

	@Autowired
	private ModelMapper mapper;

	@Autowired
	private PasswordEncoder encoder;

	@Override
	public CustomerSignUpDTO customerRegistration(@Valid CustomerSignUpDTO dto) {

		Customers customer = mapper.map(dto, Customers.class);

		customer.setCustomerPassword(encoder.encode(customer.getCustomerPassword()));
		
		customer.setCustomerStatus(Status.ACTIVE);
		
		customer.setUserRole(UserRole.ROLE_CUSTOMER);
		
		return mapper.map(customerDao.save(customer), CustomerSignUpDTO.class);
	}

	@Override
	public CustomerSignUpDTO vendorRegistration(@Valid CustomerSignUpDTO dto) {

		Vendors vendor = mapper.map(dto, Vendors.class);
		System.out.println(vendor.toString());
		vendor.setVendorPassword(encoder.encode(vendor.getVendorPassword()));
		
		return mapper.map(vendorDao.save(vendor), CustomerSignUpDTO.class);
	}

}
