package com.app.service;

import java.security.Key;
import java.time.Clock;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoder;
import io.jsonwebtoken.io.Decoders;

@Service
@Transactional
public class JwtServiceImpl implements JwtService {
	
	public String generateToken(String email) {
		
		Map<String, Object> claims = new HashMap<String, Object>();
		
		return createToken(claims,email);
	}

	private String createToken(Map<String, Object> claims, String email) {
		
		
		
		return Jwts.builder()
				.setClaims(claims)
				.setSubject(email)
				.setIssuedAt(new Date(System.currentTimeMillis()))
				.setExpiration(new Date(System.currentTimeMillis()+1000*60*30))
				.signWith(,getSecretKey());
	}

	private Key getSecretKey() {
		byte [] key = Decoders.BASE64.decode(SECRET);
		return null;
	}
	
}
